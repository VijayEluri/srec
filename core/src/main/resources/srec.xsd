<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2010 Victor Tatai
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
  ~ the License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
  ~ an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for
  ~ the specific language governing permissions and limitations under the License.
  -->

<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://github.com/srec"
           xmlns="http://github.com/srec">
    <xs:element name="suite" type="suiteType"/>
    <xs:complexType name="suiteType">
        <xs:annotation><xs:documentation>
            Root element for test files, groups test cases and may contain method definitions
        </xs:documentation></xs:annotation>
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element type="requireType" name="require"/>
            <xs:element type="defType" name="def"/>
            <xs:element type="test_caseType" name="test_case"/>
        </xs:choice>
        <xs:attribute type="xs:string" name="name"/>
    </xs:complexType>
    <xs:complexType name="blockType">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
            <xs:element type="defType" name="def"/>
            <xs:element type="window_activateType" name="window_activate"/>
            <xs:element type="dialog_activateType" name="dialog_activate"/>
            <xs:element type="hide_internal_frameType" name="hide_internal_frame"/>
            <xs:element type="push_menuType" name="push_menu"/>
            <xs:element type="selectType" name="select"/>
            <xs:element type="typeType" name="type"/>
            <xs:element type="type_specialType" name="type_special"/>
            <xs:element type="assertType" name="assert"/>
            <xs:element type="assert_emptyType" name="assert_empty"/>
            <xs:element type="assert_notEmptyType" name="assert_not_empty"/>
            <xs:element type="assert_comboboxType" name="assert_combobox"/>
            <xs:element type="clickType" name="click" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element type="click_headerType" name="click_header" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element type="assert_enabledType" name="assert_enabled"/>
            <xs:element type="assert_has_focusType" name="assert_has_focus"/>
            <xs:element type="assert_field_propertyType" name="assert_field_property"/>
            <xs:element type="assert_checkedType" name="assert_checked"/>
            <xs:element type="slideType" name="slide"/>
            <xs:element type="assert_sliderType" name="assert_slider"/>
            <xs:element type="tabType" name="tab"/>
            <xs:element type="assert_headerType" name="assert_header" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element type="assert_cellType" name="assert_cell"/>
            <xs:element type="assert_cell_not_emptyType" name="assert_cell_not_empty"/>
            <xs:element type="assert_nullType" name="assert_null"/>
            <xs:element type="assert_not_nullType" name="assert_not_null"/>
            <xs:element type="row_selectType" name="row_select"/>
            <xs:element type="cell_selectType" name="cell_select"/>
            <xs:element type="assert_row_selectedType" name="assert_row_selected"/>
            <xs:element type="screenshotType" name="screenshot" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element type="setType" name="set"/>
            <xs:element type="ifType" name="if"/>
            <xs:element type="whileType" name="while"/>
            <xs:element type="callType" name="call"/>
            <xs:element type="findType" name="find"/>
            <xs:element type="find_by_typeType" name="find_by_type"/>
            <xs:element type="find_dialogType" name="find_dialog"/>
            <xs:element type="find_frameType" name="find_frame"/>
            <xs:element type="closeType" name="close"/>
            <xs:element type="incType" name="inc"/>
            <xs:element type="pauseType" name="pause"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="test_caseType">
        <xs:annotation><xs:documentation>
            A test case represents a single test to be executed by srec.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="blockType">
                <xs:attribute type="xs:string" name="name"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="assert_enabledType">
        <xs:annotation><xs:documentation>
            Command which asserts that a component is enabled (default) or disabled
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator"/>
                <xs:attribute type="xs:string" name="enabled">
                    <xs:annotation><xs:documentation>
                        Optional parameter, default is true
                    </xs:documentation></xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_hasFocusType">
        <xs:annotation><xs:documentation>
            Command which asserts that a component is the focus owner
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_field_propertyType">
        <xs:annotation><xs:documentation>
            Command which asserts that a component property is equals to the one provided.
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required">
                    <xs:annotation><xs:documentation>
                        The component locator
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="expectedObject" use="required">
                    <xs:annotation><xs:documentation>
                        Name of the expected property
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="expectedObjectType" use="required">
                    <xs:annotation><xs:documentation>
                        Property type
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="property" use="required">
                    <xs:annotation><xs:documentation>
                        Property name
                    </xs:documentation></xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_checkedType">
        <xs:annotation><xs:documentation>
            Command which asserts that a component is checked (default) or unchecked
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator"/>
                <xs:attribute type="xs:string" name="checked">
                    <xs:annotation><xs:documentation>
                        Optional parameter, default is true
                    </xs:documentation></xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="elseType">
        <xs:annotation><xs:documentation>
            An else option inside an if, at most one else block may be present inside an if block
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="blockType"/>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertType">
        <xs:annotation><xs:documentation>
            Command which asserts that a text component contains the given text
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
                <xs:attribute type="xs:string" name="text" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_emptyType">
        <xs:annotation><xs:documentation>
            Command which asserts that a text component is empty
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_notEmptyType">
        <xs:annotation><xs:documentation>
            Command which asserts that a text component is not empty
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_comboboxType">
        <xs:annotation><xs:documentation>
            Command which asserts that a combobox contains the given text
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
                <xs:attribute type="xs:string" name="text" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="window_activateType">
        <xs:annotation><xs:documentation>
            Command which activates a window
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dialog_activateType">
        <xs:annotation><xs:documentation>
            Command which activates a dialog
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_cellType">
        <xs:annotation><xs:documentation>
            Command which asserts that a table cell contains the given text
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="table" use="required">
                    <xs:annotation><xs:documentation>
                        The table locator
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="row" use="required">
                    <xs:annotation><xs:documentation>
                        The table row, starting at zero
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="column" use="required">
                    <xs:annotation><xs:documentation>
                        The table column, starting at zero
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="text" use="required">
                    <xs:annotation><xs:documentation>
                        The expected text
                    </xs:documentation></xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_cell_not_emptyType">
        <xs:annotation><xs:documentation>
            Command which asserts that a table cell contains some text
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="table" use="required">
                    <xs:annotation><xs:documentation>
                        The table locator
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="row" use="required">
                    <xs:annotation><xs:documentation>
                        The table row, starting at zero
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="column" use="required">
                    <xs:annotation><xs:documentation>
                        The table column, starting at zero
                    </xs:documentation></xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_nullType">
        <xs:annotation><xs:documentation>
            Command which asserts that a variable is null
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="varName" use="required">
                    <xs:annotation><xs:documentation>
                        The variable name
                    </xs:documentation></xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_not_nullType">
        <xs:annotation><xs:documentation>
            Command which asserts that a variable is not null
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="varName" use="required">
                    <xs:annotation><xs:documentation>
                        The variable name
                    </xs:documentation></xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="type_specialType">
        <xs:annotation><xs:documentation>
            Command which types special characters such as Tab, Backspace, End
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
                <xs:attribute type="xs:string" name="text" use="required">
                    <xs:annotation><xs:documentation>
                        The special character such as "Tab", "End", "Backspace"
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="modifiers" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="push_menuType">
        <xs:annotation><xs:documentation>
            Command which pushes a menu sequence, either using its indexes or texts. The menu bar for the current active
            window is used 
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="indexes" use="optional">
                    <xs:annotation><xs:documentation>
                        The menu indexes separated by comma such as 0,1,0
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="path" use="optional">
                    <xs:annotation><xs:documentation>
                        The menu path such as File>Save>File1 
                    </xs:documentation></xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_row_selectedType">
        <xs:annotation><xs:documentation>
            Command which asserts that a row is selected
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="table" use="required">
                    <xs:annotation><xs:documentation>
                        The table locator
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="row" use="required">
                    <xs:annotation><xs:documentation>
                        The row index starting at zero
                    </xs:documentation></xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="parameterType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="name" use="required"/>
                <xs:attribute type="xs:string" name="type" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="screenshotType">
        <xs:annotation><xs:documentation>
            Command which takes a screenshot
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="mode" use="required">
                    <xs:annotation><xs:documentation>
                        Mode, can be either FRAME, INTERNAL_FRAME or DESKTOP
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="iframe" use="optional">
                    <xs:annotation><xs:documentation>
                        Specifies the internal frame title when mode is INTERNAL_FRAME
                    </xs:documentation></xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="tabType">
        <xs:annotation><xs:documentation>
            Command which selects a tab
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
                <xs:attribute type="xs:string" name="text" use="optional"/>
                 <xs:attribute type="xs:string" name="index" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="hide_internal_frameType">
        <xs:annotation><xs:documentation>
            Command which hides an internal frame
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
                <xs:attribute type="xs:string" name="indexes" use="optional"/>
                <xs:attribute type="xs:string" name="path" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="row_selectType">
        <xs:annotation><xs:documentation>
            Command which selects table rows
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="table" use="required"/>
                <xs:attribute type="xs:string" name="first" use="required"/>
                <xs:attribute type="xs:string" name="last" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="cell_selectType">
        <xs:annotation><xs:documentation>
            Command which selects table cells
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="table" use="required"/>
                <xs:attribute type="xs:string" name="column" use="required"/>
                <xs:attribute type="xs:string" name="row" use="required"/>
                <xs:attribute type="xs:string" name="clicks" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="thenType">
        <xs:simpleContent>
            <xs:extension base="blockType"/>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="setType">
        <xs:annotation><xs:documentation>
            Command which sets a variable which may be used later on by other commands such as an if or while
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="var" use="required"/>
                <xs:attribute type="xs:string" name="expression" use="required"/>
                <xs:attribute type="xs:string" name="type" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="slideType">
        <xs:annotation><xs:documentation>
            Command which selects a value in a slider
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
                <xs:attribute type="xs:string" name="value" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_headerType">
        <xs:annotation><xs:documentation>
            Command which asserts that a table header has the given text
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="table" use="required"/>
                <xs:attribute type="xs:string" name="column" use="required"/>
                <xs:attribute type="xs:string" name="text" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="elsifType">
        <xs:simpleContent>
            <xs:restriction base="blockType">
                <xs:attribute type="xs:string" name="expression" use="required"/>
            </xs:restriction>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="incType">
        <xs:annotation><xs:documentation>
            Command which increases the value of a variable
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="var" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="clickType">
        <xs:annotation><xs:documentation>
            Command which clicks on a component
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
                <xs:attribute type="xs:string" name="modifiers" use="optional">
                    <xs:annotation><xs:documentation>
                        Modifiers when clicking
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:integer" name="count" use="optional">
                    <xs:annotation><xs:documentation>
                        Click count, default is one
                    </xs:documentation></xs:annotation>
                </xs:attribute>
                <xs:attribute type="xs:string" name="textColumn" use="optional">
                    <xs:annotation><xs:documentation>
                        When clicking on a text field, which char should be clicked
                    </xs:documentation></xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="click_headerType">
        <xs:annotation><xs:documentation>
            Command which clicks in a column's table header
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
                <xs:attribute type="xs:string" name="column" use="required"/>
                <xs:attribute type="xs:string" name="count" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="call_parameterType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="name" use="required"/>
                <xs:attribute type="xs:string" name="value" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assert_sliderType">
        <xs:annotation><xs:documentation>
            Command which asserts that a slider has the given value
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
                <xs:attribute type="xs:string" name="value" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="defType">
        <xs:annotation><xs:documentation>
            Defines a method which may be called later on
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:restriction base="blockType">
                <xs:sequence>
                    <xs:element type="parameterType" name="parameter" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute type="xs:string" name="name" use="required"/>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeType">
        <xs:annotation><xs:documentation>
            Command which types a value in a text component
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
                <xs:attribute type="xs:string" name="text" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="whileType">
        <xs:annotation><xs:documentation>
            A while loop
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:restriction base="blockType">
                <xs:sequence>
                    <xs:element name="break"/>
                </xs:sequence>
                <xs:attribute type="xs:string" name="expression" use="required"/>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ifType">
        <xs:annotation><xs:documentation>
            An if branching command which takes a then, elsif or else nested tags
        </xs:documentation></xs:annotation>
        <xs:sequence>
            <xs:element type="thenType" name="then" maxOccurs="1" minOccurs="1"/>
            <xs:element type="elsifType" name="elsif" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element type="elseType" name="else" maxOccurs="1" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="expression" use="required"/>
    </xs:complexType>
    <xs:complexType name="requireType">
        <xs:annotation><xs:documentation>
            A require loads another file allowing its methods to be called from the current file. 
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="name" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="findType">
        <xs:annotation><xs:documentation>
            Command which finds a component, assigning it to the given id
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
                <xs:attribute type="xs:string" name="id" use="required"/>
                <xs:attribute type="xs:string" name="findComponentType" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="find_by_typeType">
        <xs:annotation><xs:documentation>
            Command which finds a component by type, assigning it to the given id
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="id" use="required"/>
                <xs:attribute type="xs:string" name="findComponentType" use="required"/>
                <xs:attribute type="xs:string" name="containerId" use="optional"/>
                <xs:attribute type="xs:integer" name="index" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="find_dialogType">
        <xs:annotation><xs:documentation>
            Command which finds a dialog, assigning it to the given id
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="title" use="required"/>
                <xs:attribute type="xs:string" name="id" use="required"/>
                <xs:attribute type="xs:string" name="required" default="true"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="find_frameType">
        <xs:annotation><xs:documentation>
            Command which finds a frame, assigning it to the given id
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="title" use="required"/>
                <xs:attribute type="xs:string" name="id" use="required"/>
                <xs:attribute type="xs:string" name="required" default="true"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="closeType">
        <xs:annotation><xs:documentation>
            Command which closes a window
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="selectType">
        <xs:annotation><xs:documentation>
            Command which selects a combo box item
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="locator" use="required"/>
                <xs:attribute type="xs:string" name="item"/>
                <xs:attribute type="xs:string" name="index"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="callType">
        <xs:annotation><xs:documentation>
            Command which calls a method, either defined either through a script or natively in Java
        </xs:documentation></xs:annotation>
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element type="call_parameterType" name="call_parameter"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="method" use="required"/>
    </xs:complexType>
    <xs:complexType name="pauseType">
        <xs:annotation><xs:documentation>
            Command which pauses execution either for a finite amount of time or until Ctrl-P is pressed
        </xs:documentation></xs:annotation>
        <xs:attribute type="xs:integer" name="interval" use="optional"/>
    </xs:complexType>
</xs:schema>
